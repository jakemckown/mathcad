(:= (@FUNCTION (@LABEL VARIABLE (@ID GetValue (@SUB JSON))) (@ARGS (@LABEL VARIABLE Arguments))) (@PROGRAM (@ASSIGN (@LABEL VARIABLE ErrorMessage) "This function takes a single vector with the values Matrix and Path.") (@IF (@NOT (@APPLY (@LABEL FUNCTION IsArray) (@ARGS (@LABEL VARIABLE Arguments)))) (@BODY (@RETURN (@APPLY (@LABEL FUNCTION error) (@ARGS (@LABEL VARIABLE ErrorMessage)))))) (@IF (@EQ (@APPLY (@LABEL FUNCTION rows) (@ARGS (@LABEL VARIABLE Arguments))) 2) (@BODY (@ASSIGN (@MATRIX 2 1 (@LABEL VARIABLE Matrix) (@LABEL VARIABLE Path)) (@LABEL VARIABLE Arguments)) (@ASSIGN (@LABEL VARIABLE ReturnPath) "none")) (@EQ (@APPLY (@LABEL FUNCTION rows) (@ARGS (@LABEL VARIABLE Arguments))) 3) (@BODY (@ASSIGN (@MATRIX 3 1 (@LABEL VARIABLE Matrix) (@LABEL VARIABLE Path) (@LABEL VARIABLE ReturnPath)) (@LABEL VARIABLE Arguments))) (@BODY (@RETURN (@APPLY (@LABEL FUNCTION error) (@ARGS (@LABEL VARIABLE ErrorMessage)))))) (@ASSIGN (@MATRIX 6 1 (@LABEL VARIABLE Value) (@LABEL VARIABLE SearchPath) (@LABEL VARIABLE Dot) (@LABEL VARIABLE Open) (@LABEL VARIABLE Close) (@LABEL VARIABLE Indices)) (@MATRIX 6 1 Matrix Path "." "(" ")" (@MATRIX 1 2 0 0))) (@WHILE 1 (@BODY (@ASSIGN (@LABEL VARIABLE DotPosition) (@APPLY (@LABEL FUNCTION search) (@ARGS (@SEP (@SEP (@LABEL VARIABLE SearchPath) Dot) 0)))) (@IF (@EQ DotPosition (@NEG 1)) (@BODY (@ASSIGN (@LABEL VARIABLE Key) (@LABEL VARIABLE SearchPath))) (@BODY (@ASSIGN (@LABEL VARIABLE Key) (@APPLY (@LABEL FUNCTION substr) (@ARGS (@SEP (@SEP (@LABEL VARIABLE SearchPath) 0) DotPosition)))))) (@ASSIGN (@LABEL VARIABLE OpenPosition) (@APPLY (@LABEL FUNCTION search) (@ARGS (@SEP (@SEP Key Open) 0)))) (@IF (@EQ (@LABEL VARIABLE OpenPosition) (@NEG 1)) (@BODY (@ASSIGN (@LABEL VARIABLE Indices) (@APPLY (@LABEL FUNCTION stack) (@ARGS (@SEP Indices (@MATRIX 1 2 (@INDEX (@PARENS (@INDEX (@APPLY (@LABEL FUNCTION match) (@ARGS (@SEP Key Value))) 0)) 0) 1))))) (@ASSIGN (@LABEL VARIABLE Value) (@INDEX (@APPLY (@LABEL FUNCTION vlookup) (@ARGS (@SEP (@SEP (@LABEL VARIABLE Key) (@LABEL VARIABLE Value)) 1))) 0))) (@BODY (@ASSIGN (@LABEL VARIABLE ClosePosition) (@APPLY (@LABEL FUNCTION search) (@ARGS (@SEP (@SEP Key Close) 0)))) (@ASSIGN (@LABEL VARIABLE Index) (@APPLY (@LABEL FUNCTION str2num) (@ARGS (@APPLY (@LABEL FUNCTION substr) (@ARGS (@SEP (@SEP Key (+ OpenPosition 1)) (- (- ClosePosition OpenPosition) 1))))))) (@ASSIGN (@LABEL VARIABLE Key) (@APPLY (@LABEL FUNCTION substr) (@ARGS (@SEP (@SEP Key 0) OpenPosition)))) (@ASSIGN (@LABEL VARIABLE Indices) (@APPLY (@LABEL FUNCTION stack) (@ARGS (@SEP Indices (@MATRIX 1 2 (@INDEX (@PARENS (@INDEX (@APPLY (@LABEL FUNCTION match) (@ARGS (@SEP Key Value))) 0)) 0) 1))))) (@ASSIGN (@LABEL VARIABLE Indices) (@APPLY (@LABEL FUNCTION stack) (@ARGS (@SEP Indices (@MATRIX 1 2 Index 0))))) (@ASSIGN (@LABEL VARIABLE Value) (@INDEX (@PARENS (@INDEX (@APPLY (@LABEL FUNCTION vlookup) (@ARGS (@SEP (@SEP (@LABEL VARIABLE Key) (@LABEL VARIABLE Value)) 1))) 0)) Index)))) (@IF (@EQ DotPosition (@NEG 1)) (@BODY @BREAK) (@BODY (@ASSIGN (@LABEL VARIABLE SearchPath) (@APPLY (@LABEL FUNCTION substr) (@ARGS (@SEP (@SEP (@LABEL VARIABLE SearchPath) (+ DotPosition 1)) (@APPLY (@LABEL FUNCTION strlen) (@ARGS (@LABEL VARIABLE SearchPath))))))))))) (@ASSIGN (@LABEL VARIABLE Indices) (@APPLY (@LABEL FUNCTION submatrix) (@ARGS (@SEP (@SEP (@SEP (@SEP Indices 1) (- (@APPLY rows (@ARGS Indices)) 1)) 0) (- (@APPLY (@LABEL FUNCTION cols) (@ARGS Indices)) 1))))) (@IF (@EQ (@LABEL VARIABLE ReturnPath) "path") (@BODY (@RETURN (@MATRIX 2 1 Value Path))) (@EQ (@LABEL VARIABLE ReturnPath) "indices") (@BODY (@RETURN (@MATRIX 2 1 Value (@LABEL VARIABLE Indices)))) (@BODY (@RETURN Value)))))